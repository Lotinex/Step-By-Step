{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Back/DB/Database.ts","webpack:///./src/Back/Tools/Utils.ts","webpack:///external \"mysql\"","webpack:///./src/Back/Tools/Lognex.ts","webpack:///external \"express\"","webpack:///./src/Back/Web/Login.ts","webpack:///./src/Back/Web/Main.ts","webpack:///external \"path\"","webpack:///./src/Back/Web/Route.ts","webpack:///external \"express-session\"","webpack:///external \"passport-google-oauth20\"","webpack:///./src/Back/Tools/Data.ts","webpack:///./src/Back/Web/Request.ts","webpack:///external \"socket.io-client\"","webpack:///external \"passport\"","webpack:///external \"body-parser\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DB","MySQL","createConnection","host","CONFIG","HOST","port","PORT","user","USER","password","PASS","database","Table","table","this","expressionArr","parseArr","forEach","expression","push","keys","escape","JSON","stringify","conditions","Promise","rs","rj","conditionsArr","parseExpression","query","join","err","res","values","valueArr","map","v","valueExpression","TABLE","users","item","session","mobs","boss","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start","end","Math","floor","random","require","label","color","console","log","time","passport","App","use","Strategy","clientID","clientSecret","callbackURL","passReqToCallback","req","accessToken","refreshToken","profile","done","process","nextTick","findOne","id","add","baseStat","now","undefined","secret","SESSION_SECRET","resave","saveUninitialized","initialize","serializeUser","deserializeUser","obj","authenticate","scope","failureRedirect","successRedirect","isAuthenticated","redirect","Logger","GLOBAL","INTERNAL_WS_URL","WS_PORT","Login","init","static","resolve","__dirname","bodyParser","urlencoded","set","listen","trace","inventory","price","rare","reqLV","level","star","stat","atk","def","upgradeLv","upgradedStat","description","atk_type","type","update","Router","render","mySession","createdAt","delete","destroy","send","health","critical_chance","critical_damage","atk_speed","accuracy","luck","ignore_protection","multishot","STAGE_REQ_LV","post","body","stage","success","updatedEquip","parse","equip","updatedStat","parseInt"],"mappings":"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","file":"web.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","\r\nimport * as CONFIG from './config.json';\r\nimport * as MySQL from 'mysql';\r\n\r\nconst DB = MySQL.createConnection({\r\n    host : CONFIG.HOST,\r\n    port : CONFIG.PORT,\r\n    user : CONFIG.USER,\r\n    password : CONFIG.PASS,\r\n    database : CONFIG.DB,\r\n})\r\nclass Table<T extends \"users\" | \"mobs\" | \"session\" | \"item\" | \"boss\"> {\r\n    private table: T;\r\n    constructor(table: T){\r\n        this.table = table;\r\n    }\r\n    static parseExpression(expressionArr: Array<{[key: string]: any}>){\r\n        const parseArr: string[] = []\r\n        expressionArr.forEach(expression => {\r\n            const push = (value: string | number) => parseArr.push(`${key}=${value}`)\r\n\r\n            const key = Object.keys(expression)[0]\r\n            const value = expression[key];\r\n            switch(typeof value){\r\n                case 'string':\r\n                    push(`\"${value}\"`)\r\n                    break;\r\n                case 'number':\r\n                    push(value)\r\n                    break;\r\n                case 'object':\r\n                    push(MySQL.escape(JSON.stringify(value)))\r\n                    break;\r\n            }\r\n        })\r\n        return parseArr;\r\n    }\r\n    find(...conditions: Array<{[key: string]: any}>): Promise<Database.Units[T][]>{\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n\r\n            DB.query(`SELECT * FROM ${this.table} WHERE ${conditionsArr.join(' , ')}`, (err, res) => {\r\n                if(err) rj(err);\r\n                else rs(res);\r\n            })\r\n        })\r\n    }\r\n    findOne(...conditions: Array<{[key: string]: any}>): Promise<Database.Units[T]>{\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n            DB.query(`SELECT * FROM ${this.table} WHERE ${conditionsArr.join(' , ')}`, (err, res) => {\r\n                if(err) rj(err);\r\n                else rs(res[0]); //? 사실 이럴 일이 없어야 한다. 왜 배열이 나오지?  -> LIMIT 1 deprecated\r\n            })\r\n        })\r\n    }\r\n    add(...values: any[]){\r\n        return new Promise((rs, rj) => {\r\n            const valueArr = values.map(v => {\r\n                if(typeof v == 'object') return `'${JSON.stringify(v)}'`;\r\n                return `\"${v}\"`;\r\n            });\r\n            DB.query(`INSERT INTO ${this.table} VALUES (${valueArr.join(\" , \")})`, err => {\r\n                if(err) rj(err);\r\n                else rs();\r\n            })\r\n        })\r\n    }\r\n    update(conditions: Array<{[key: string]: any}>, valueExpression: Array<{[key: string]: any}>){\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n            const valueArr = Table.parseExpression(valueExpression)\r\n            DB.query(`UPDATE ${this.table} SET ${valueArr.join(' , ')} WHERE ${conditionsArr.join(' ')}`, err => {\r\n                if(err) rj(err);\r\n                else rs();\r\n            })\r\n        })\r\n    }\r\n    delete(conditions: Array<{[key: string]: any}>){\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n            DB.query(`DELETE FROM ${this.table} WHERE ${conditionsArr.join(' ')}`, err => {\r\n                if(err) rj(err);\r\n                else rs();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    TABLE: {\r\n        users: new Table(\"users\"),\r\n        item: new Table(\"item\"),\r\n        session: new Table(\"session\"),\r\n        mobs: new Table(\"mobs\"),\r\n        boss: new Table(\"boss\")\r\n    }\r\n};","\r\nexport default class Util {\r\n    public static time(){\r\n        const c = new Date();\r\n        return [\r\n            c.getFullYear(),\r\n            '-',\r\n            c.getMonth() + 1,\r\n            '-',\r\n            c.getDate(),\r\n            ' ',\r\n            c.getHours(),\r\n            ':',\r\n            c.getMinutes(),\r\n            ':',\r\n            c.getSeconds(),\r\n            ':',\r\n            c.getMilliseconds()\r\n        ].join('')\r\n    }\r\n    public static random(start: number, end: number){\r\n        return Math.floor((Math.random() * (end-start+1)) + start)\r\n    }\r\n}","module.exports = require(\"mysql\");","import * as Color from 'ansi-colors';\r\nimport * as Fs from 'fs';\r\nimport Util from '../Tools/Utils';\r\n\r\n\r\n\r\nexport default class Lognex { //일단 이 클래스 하나만 둔다. 나중에 재작성한다.\r\n    public label: string;\r\n    public color: string;\r\n    constructor(label: string, color= \"green\"){\r\n        this.label = label;\r\n        this.color = color;\r\n\r\n    }\r\n    trace(value: string){\r\n        /**\r\n         * @deprecated\r\n         * Electron에 로그를 표시할 때 컬러가 깨짐.\r\n         */\r\n        // console.log(`${Color[this.color](this.label)} | ${Color.cyan(Utils.time())} | ${value}`)\r\n        console.log(`${this.label} | ${Util.time()} | ${value}`)\r\n\r\n    }\r\n}\r\n","module.exports = require(\"express\");","\r\nimport DB from '../DB/Database';\r\nimport session from 'express-session';\r\nimport * as passport from 'passport';\r\nimport * as MySQL from 'mysql';\r\nimport * as CONFIG from './json/login.json';\r\nimport { Application } from 'express';\r\nimport {Strategy} from 'passport-google-oauth20';\r\nimport {baseStat} from '../Tools/Data';\r\n\r\nexport function init(passport: passport.PassportStatic, App: Application){\r\n    \r\n    passport.use(new Strategy({\r\n            clientID: CONFIG.clientID,\r\n            clientSecret: CONFIG.clientSecret,\r\n            callbackURL: CONFIG.callbackURL,\r\n            passReqToCallback : true\r\n        }, (req, accessToken, refreshToken, profile, done) => {\r\n            process.nextTick(async () => {\r\n                const user = await DB.TABLE.users.findOne({ id : profile.id });\r\n                \r\n                if(!user){\r\n                    await DB.TABLE.users.add(profile.id, \"{}\", 1, 0, \"earth\", baseStat, \"{}\");\r\n                }\r\n                (req.session as Express.Session).profile = {\r\n                    id : profile.id\r\n                }\r\n                await DB.TABLE.session.add((req.session as Express.Session).id, (req.session as Express.Session).profile, Date.now());\r\n                return done(undefined, profile);\r\n            })\r\n        }\r\n    ));\r\n    App.use(session({\r\n        secret: CONFIG.SESSION_SECRET,\r\n        resave: true,\r\n        saveUninitialized: false\r\n    }));\r\n\r\n    App.use(passport.initialize());\r\n    App.use(passport.session()); \r\n\r\n    passport.serializeUser((user: any, done: any)  => {\r\n        done(null, user);\r\n    });\r\n    \r\n    passport.deserializeUser((obj: any, done: any) => {\r\n        done(null, obj);\r\n    });\r\n\r\n    App.get('/auth/google', passport.authenticate('google', { scope: ['profile'] }));\r\n    \r\n    App.get('/auth/google/callback', passport.authenticate( 'google', { failureRedirect: '/', successRedirect: '/game' }));\r\n    \r\n}\r\n\r\nexport function isAuthenticated(req: Express.Request, res: any, process: any){\r\n    if(req.isAuthenticated()) return process();\r\n    res.redirect('/');\r\n}\r\n","\r\nimport Express from 'express';\r\nimport Path from 'path';\r\nimport Route from './Route';\r\nimport DB from '../DB/Database';\r\nimport * as MySQL from 'mysql';\r\nimport * as Login from './Login';\r\nimport Socket from 'socket.io-client';\r\nimport Lognex from '../Tools/Lognex';\r\nimport * as GLOBAL from '../../global-config.json';\r\nimport passport from 'passport';\r\nimport * as bodyParser from 'body-parser';\r\n\r\nconst App = Express();\r\nconst ws = Socket(`ws://${GLOBAL.INTERNAL_WS_URL}:${GLOBAL.WS_PORT}`)\r\nconst Logger = new Lognex(\"WEB\", \"red\");\r\nLogin.init(passport, App);\r\n\r\nApp.use(Express.static(Path.resolve(__dirname, 'assets')))\r\n\r\nApp.use(bodyParser.urlencoded());\r\n//App.use(bodyParser.json())\r\n \r\nApp.set('views', Path.resolve(__dirname, 'views'))\r\nApp.set('view engine', 'pug')\r\n\r\nApp.use(\"/\", Route());\r\n\r\nApp.listen(80, () => {\r\n    Logger.trace(\"Web Server opened.\")\r\n})\r\n\r\n\r\n\r\n// 아이템을 임시로 해놓자. 나중에 방식이 바뀐다.\r\nconst wooden_sword = {\r\n    price : 100,\r\n    name : \"나무 검\",\r\n    rare : \"normal\",\r\n    reqLV : 0,\r\n    level : {\r\n        value : 1,\r\n        star : 1\r\n    },\r\n    stat : {\r\n        atk: 3\r\n    },\r\n    description : \"초보자용 나무 검이다.\",\r\n    atk_type : \"attack\",\r\n    type : \"sword\"\r\n\r\n}\r\nconst lava_pendant  = {\r\n    price : 100,\r\n    name : \"라바 펜던트\",\r\n    rare : \"legendary\",\r\n    reqLV : 250,\r\n    level : {\r\n        value : 167,\r\n        star : 6\r\n    },\r\n    stat : {\r\n        atk: 455,\r\n        def: 20,\r\n        atk_speed: 10,\r\n        ignore_protection: 45,\r\n        critical_chance: 70,\r\n        critical_damage: 4.5\r\n\r\n    },\r\n    description : \"전설적인 불의 새의 심장에 있는 보석이 박힌 펜던트이다.\",\r\n    atk_type : \"buff\",\r\n    type : \"pendant\"\r\n\r\n}\r\nconst trace_of_the_void  = {\r\n    price : 100,\r\n    name : \"공허의 흔적\",\r\n    rare : \"mythic\",\r\n    reqLV : 900,\r\n    level : {\r\n        value : 520,\r\n        star : 7\r\n    },\r\n    stat : {\r\n        atk: 100,\r\n        def: 10\r\n    },\r\n    upgradeLv: 0,\r\n    upgradedStat: {},\r\n    description : \"알 수 없는 공간에서 한 연구원이 떼어 온 공허(보이드) 의 흔적이다.\\n주변 공간을 일그러뜨리고 있다.\",\r\n    atk_type : \"buff\",\r\n    type : \"pendant\"\r\n}\r\nconst burning_heart = {\r\n    price : 100,\r\n    name : \"버닝 하트\",\r\n    rare : \"epic\",\r\n    reqLV : 85,\r\n    level : {\r\n        value : 47,\r\n        star : 5\r\n    },\r\n    stat : {\r\n        atk: 10,\r\n        health: 100,\r\n        critical_chance: 0,\r\n        critical_damage: 1.5,\r\n        atk_speed: 1,\r\n        def: 0,\r\n        accuracy: 0,\r\n        luck: 0,\r\n        ignore_protection: 0,\r\n        multishot: 0\r\n    },\r\n    description : \"전설 속 정의 영혼이 가졌던 불타는 심장이다. 죽지 않고 살아있다.\",\r\n    atk_type : \"buff\",\r\n    type : \"pendant\"\r\n\r\n}\r\nconst echani = {\r\n    price : 100,\r\n    name : \"에찬이\",\r\n    rare : \"mythic\",\r\n    reqLV : 999,\r\n    level : {\r\n        value : 750,\r\n        star : 7\r\n    },\r\n    stat : {\r\n        atk: 55400,\r\n        ignore_protection: 95,\r\n        critical_chance: 100,\r\n        critical_damage: 12,\r\n        atk_speed: 10,\r\n        health: 500\r\n    },\r\n    description : \"에찬이다.\",\r\n    atk_type : \"buff\",\r\n    type : \"pendant\"\r\n\r\n}\r\nconst inventory = {\r\n    //\"wooden_sword\" : wooden_sword,\r\n    //\"lava_pendant\" : lava_pendant,\r\n    \"trace_of_the_void\" : trace_of_the_void,\r\n    //\"burning_heart\" : burning_heart, //테스트\r\n    //\"echani\" : echani\r\n}\r\n\r\nDB.TABLE.users.update([ { id : \"114771621283891074143\" } ], [ { inventory :  inventory } ]) \r\n\r\n\r\n","module.exports = require(\"path\");","\r\n\r\nimport Express from 'express';\r\nimport * as Login from './Login';\r\nimport DB from '../DB/Database';\r\nimport * as TABLE from './json/lang-ko.json';\r\nimport RequestHandler from './Request';\r\n\r\n\r\nexport default function Route() {\r\n    const Router = Express.Router();\r\n\r\n    Router.get(\"/game\", Login.isAuthenticated, (req, res) => {\r\n        res.render(\"game\");\r\n    })\r\n    Router.get(\"/\", async (req, res) => {\r\n        if(req.session){\r\n            const mySession = await DB.TABLE.session.findOne([{id: req.session.id}]);\r\n            if((new Date() as any) - mySession.createdAt > 3000000){\r\n                await DB.TABLE.session.delete([{id: req.session.id}]);\r\n                req.session.destroy(() => {});\r\n            }\r\n        }\r\n        res.render(\"index\");\r\n    })\r\n    Router.get(\"/setupLangTable\", (req, res) => {\r\n        res.send(`window.LANGUAGE_TABLE = ${JSON.stringify(TABLE)};`);\r\n    })\r\n    \r\n    RequestHandler(Router)\r\n\r\n    return Router;\r\n}\r\n\r\n","module.exports = require(\"express-session\");","module.exports = require(\"passport-google-oauth20\");","export const baseStat = {\r\n    atk: 10,\r\n    health: 100,\r\n    critical_chance: 0,\r\n    critical_damage: 1.5,\r\n    atk_speed: 1,\r\n    def: 0,\r\n    accuracy: 0,\r\n    luck: 0,\r\n    ignore_protection: 0,\r\n    multishot: 0\r\n\r\n}","import { Router } from \"express\";\r\nimport Express from 'express';\r\nimport * as Login from './Login';\r\nimport DB from '../DB/Database';\r\nimport * as TABLE from './json/lang-ko.json';\r\nimport Lognex from '../Tools/Lognex';\r\n\r\nconst STAGE_REQ_LV = {\r\n    'earth' : 0,\r\n    'immune' : 30,\r\n    'eternal_prison' : 55,\r\n    'harbinger_of_end' : 80,\r\n    'arkcube_piece' : 100,\r\n    'loard_down_benzene' : 200\r\n}\r\n\r\n\r\n\r\nexport default function RequestHandler(Router: Router){\r\n    Router.post('/changeStage', async (req, res) => {\r\n        const user = await DB.TABLE.users.findOne({id: req.session!.profile.id});\r\n        if(user.level >= (STAGE_REQ_LV as any)[req.body.stage]){\r\n            await DB.TABLE.users.update([{id: req.session!.profile.id}], [{stage: req.body.stage}])\r\n            res.send({success: true})\r\n        } else {\r\n            res.send({success: false})\r\n        }\r\n    })\r\n    Router.post('/equipItem', async (req, res) => {\r\n        const user = await DB.TABLE.users.findOne({id: req.session!.profile.id});\r\n        const updatedEquip = JSON.parse(user.equip);\r\n        updatedEquip[req.body.item] = JSON.parse(user.inventory)[req.body.item];\r\n\r\n        const updatedStat = JSON.parse(user.stat);\r\n        for(const stat in req.body.stat){\r\n            updatedStat[stat] += parseInt(req.body.stat[stat]);\r\n        }\r\n        await DB.TABLE.users.update([{id: req.session!.profile.id}], [{equip: updatedEquip}]);\r\n        await DB.TABLE.users.update([{id: req.session!.profile.id}], [{stat: updatedStat}]);\r\n        res.send({success: true, stat: updatedStat})\r\n    })\r\n\r\n    Router.post('/equipOffItem', async (req, res) => {\r\n        const user = await DB.TABLE.users.findOne({id: req.session!.profile.id});\r\n        const updatedEquip = JSON.parse(user.equip);\r\n        delete updatedEquip[req.body.item];\r\n\r\n        const updatedStat = JSON.parse(user.stat);\r\n        for(const stat in req.body.stat){\r\n            updatedStat[stat] -= parseInt(req.body.stat[stat]);\r\n        }\r\n        await DB.TABLE.users.update([{id: req.session!.profile.id}], [{equip: updatedEquip}]);\r\n        await DB.TABLE.users.update([{id: req.session!.profile.id}], [{stat: updatedStat}]);\r\n        res.send({success: true, stat: updatedStat})\r\n    })\r\n}\r\n\r\n","module.exports = require(\"socket.io-client\");","module.exports = require(\"passport\");","module.exports = require(\"body-parser\");"],"sourceRoot":""}