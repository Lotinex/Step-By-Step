{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Back/DB/Database.ts","webpack:///./src/Back/Tools/Utils.ts","webpack:///external \"mysql\"","webpack:///./src/Back/Tools/Lognex.ts","webpack:///./src/Back/Game/Main.ts","webpack:///external \"socket.io\"","webpack:///external \"http\"","webpack:///./src/Back/Game/User.ts","webpack:///external \"cookie\"","webpack:///external \"cookie-parser\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DB","MySQL","createConnection","host","CONFIG","HOST","port","PORT","user","USER","password","PASS","database","Table","table","this","expressionArr","parseArr","forEach","expression","push","keys","escape","JSON","stringify","conditions","Promise","rs","rj","conditionsArr","parseExpression","query","join","err","res","values","valueArr","map","v","valueExpression","TABLE","users","item","session","mobs","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start","end","Math","floor","random","require","label","color","console","log","time","Server","createServer","ws","Logger","Clients","on","socket","SID","id","address","handshake","headers","split","GLOBAL","INTERNAL_WS_URL","trace","sidCookie","Cookie","parse","cookie","sessionID","CookieParser","signedCookie","LoginConfig","SESSION_SECRET","userID","findOne","profile","inventory","stat","equip","level","send","stage","find","length","itemID","itemData","chance","upgradeLv","upgradedStat","addedStatScaled","Number","toFixed","addedStatDefault","addedStat","update","success","data","onUserSocketRequest","listen","WS_PORT","User","event","emit"],"mappings":"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","file":"game.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","\r\nimport * as CONFIG from './config.json';\r\nimport * as MySQL from 'mysql';\r\n\r\nconst DB = MySQL.createConnection({\r\n    host : CONFIG.HOST,\r\n    port : CONFIG.PORT,\r\n    user : CONFIG.USER,\r\n    password : CONFIG.PASS,\r\n    database : CONFIG.DB,\r\n})\r\nclass Table<T extends \"users\" | \"mobs\" | \"session\" | \"item\"> {\r\n    private table: T;\r\n    constructor(table: T){\r\n        this.table = table;\r\n    }\r\n    static parseExpression(expressionArr: Array<{[key: string]: any}>){\r\n        const parseArr: string[] = []\r\n        expressionArr.forEach(expression => {\r\n            const push = (value: string | number) => parseArr.push(`${key}=${value}`)\r\n\r\n            const key = Object.keys(expression)[0]\r\n            const value = expression[key];\r\n            switch(typeof value){\r\n                case 'string':\r\n                    push(`\"${value}\"`)\r\n                    break;\r\n                case 'number':\r\n                    push(value)\r\n                    break;\r\n                case 'object':\r\n                    push(MySQL.escape(JSON.stringify(value)))\r\n                    break;\r\n            }\r\n        })\r\n        return parseArr;\r\n    }\r\n    find(...conditions: Array<{[key: string]: any}>): Promise<Database.Units[T][]>{\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n\r\n            DB.query(`SELECT * FROM ${this.table} WHERE ${conditionsArr.join(' , ')}`, (err, res) => {\r\n                if(err) rj(err);\r\n                else rs(res);\r\n            })\r\n        })\r\n    }\r\n    findOne(...conditions: Array<{[key: string]: any}>): Promise<Database.Units[T]>{\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n            DB.query(`SELECT * FROM ${this.table} WHERE ${conditionsArr.join(' , ')}`, (err, res) => {\r\n                if(err) rj(err);\r\n                else rs(res[0]); //? 사실 이럴 일이 없어야 한다. 왜 배열이 나오지?  -> LIMIT 1 deprecated\r\n            })\r\n        })\r\n    }\r\n    add(...values: any[]){\r\n        return new Promise((rs, rj) => {\r\n            const valueArr = values.map(v => {\r\n                if(typeof v == 'object') return `'${JSON.stringify(v)}'`;\r\n                return `\"${v}\"`;\r\n            });\r\n            DB.query(`INSERT INTO ${this.table} VALUES (${valueArr.join(\" , \")})`, err => {\r\n                if(err) rj(err);\r\n                else rs();\r\n            })\r\n        })\r\n    }\r\n    update(conditions: Array<{[key: string]: any}>, valueExpression: Array<{[key: string]: any}>){\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n            const valueArr = Table.parseExpression(valueExpression)\r\n            DB.query(`UPDATE ${this.table} SET ${valueArr.join(' , ')} WHERE ${conditionsArr.join(' ')}`, err => {\r\n                if(err) rj(err);\r\n                else rs();\r\n            })\r\n        })\r\n    }\r\n    delete(conditions: Array<{[key: string]: any}>){\r\n        return new Promise((rs, rj) => {\r\n            const conditionsArr = Table.parseExpression(conditions)\r\n            DB.query(`DELETE FROM ${this.table} WHERE ${conditionsArr.join(' ')}`, err => {\r\n                if(err) rj(err);\r\n                else rs();\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    TABLE: {\r\n        users: new Table(\"users\"),\r\n        item: new Table(\"item\"),\r\n        session: new Table(\"session\"),\r\n        mobs: new Table(\"mobs\")\r\n    }\r\n};","\r\nexport default class Util {\r\n    public static time(){\r\n        const c = new Date();\r\n        return [\r\n            c.getFullYear(),\r\n            '-',\r\n            c.getMonth() + 1,\r\n            '-',\r\n            c.getDate(),\r\n            ' ',\r\n            c.getHours(),\r\n            ':',\r\n            c.getMinutes(),\r\n            ':',\r\n            c.getSeconds(),\r\n            ':',\r\n            c.getMilliseconds()\r\n        ].join('')\r\n    }\r\n    public static random(start: number, end: number){\r\n        return Math.floor((Math.random() * (end-start+1)) + start)\r\n    }\r\n}","module.exports = require(\"mysql\");","import * as Color from 'ansi-colors';\r\nimport * as Fs from 'fs';\r\nimport Util from '../Tools/Utils';\r\n\r\n\r\n\r\nexport default class Lognex { //일단 이 클래스 하나만 둔다. 나중에 재작성한다.\r\n    public label: string;\r\n    public color: string;\r\n    constructor(label: string, color= \"green\"){\r\n        this.label = label;\r\n        this.color = color;\r\n\r\n    }\r\n    trace(value: string){\r\n        /**\r\n         * @deprecated\r\n         * Electron에 로그를 표시할 때 컬러가 깨짐.\r\n         */\r\n        // console.log(`${Color[this.color](this.label)} | ${Color.cyan(Utils.time())} | ${value}`)\r\n        console.log(`${this.label} | ${Util.time()} | ${value}`)\r\n\r\n    }\r\n}\r\n","\r\nimport Socket from 'socket.io';\r\nimport Http from 'http';\r\nimport User from './User';\r\nimport * as GLOBAL from '../../global-config.json';\r\nimport * as Cookie from 'cookie';\r\nimport * as CookieParser from 'cookie-parser';\r\nimport * as LoginConfig from '../Web/json/login.json';\r\nimport DB from '../DB/Database';\r\nimport Lognex from '../Tools/Lognex';\r\nimport Util from '../Tools/Utils';\r\n\r\n\r\nconst Server = Http.createServer();\r\nconst ws = Socket(Server);\r\nconst Logger = new Lognex(\"GAME\", \"blue\");\r\n\r\nconst Clients: {\r\n    [socketID: string]: User;\r\n} = {};\r\n\r\n\r\nws.on('connection', async socket => {\r\n    const SID = socket.id;\r\n    const address = socket.handshake.headers.host.split(':')[0];\r\n    if(address === GLOBAL.INTERNAL_WS_URL){\r\n        Logger.trace(\"Web server connected.\")\r\n        socket.on('disconnect', () => {\r\n             Logger.trace(\"Web server died.\")\r\n        })\r\n    } else if(address === '127.0.0.3'){\r\n        Logger.trace(\"Server Manager connected.\")\r\n        // 매니저에 대한 disconnect는 처리하지 않는다.\r\n        // (어짜피 걔가 죽으면 서버 두개가 다 죽는다.)\r\n    } else { \r\n        Logger.trace(`Client ${socket.id} connected.`);\r\n\r\n\r\n        const sidCookie = Cookie.parse(socket.handshake.headers.cookie)['connect.sid'];\r\n        const sessionID = CookieParser.signedCookie(sidCookie, LoginConfig.SESSION_SECRET);\r\n\r\n        const userID = JSON.parse((await DB.TABLE.session.findOne({id: sessionID})).profile).id;\r\n        const user = await DB.TABLE.users.findOne({id: userID});\r\n\r\n        user.inventory = JSON.parse(user.inventory);\r\n        user.stat = JSON.parse(user.stat);\r\n        user.equip = JSON.parse(user.equip);\r\n        console.log(user.level)\r\n\r\n        Clients[SID] = new User(socket, SID, userID);\r\n        Clients[SID].send(\"enter\", user);\r\n\r\n        onUserSocketRequest(socket)\r\n\r\n    }\r\n})\r\nfunction onUserSocketRequest(socket: SocketIO.Socket){\r\n    const SID = socket.id;\r\n\r\n    socket.on('searchMob', async () => {\r\n        const stage = (await DB.TABLE.users.findOne({id: Clients[SID].userID})).stage;\r\n        const mobs = await DB.TABLE.mobs.find({stage});\r\n        Clients[SID].send(\"detectMob\", mobs[Util.random(0, mobs.length - 1)])\r\n    })\r\n    socket.on('upgradeItem', async (itemID: string, itemData: any) => {\r\n        const chance = 1 - itemData.upgradeLv * 0.055; //점차 확률 감소\r\n        if(Math.random() < chance){ //success\r\n            const user = await DB.TABLE.users.findOne({id: Clients[SID].userID});\r\n            const inventory = JSON.parse(user.inventory);\r\n\r\n            for(const stat in inventory[itemID].stat){\r\n                const value: number = inventory[itemID].stat[stat]\r\n\r\n                if(!inventory[itemID].upgradedStat[stat]) inventory[itemID].upgradedStat[stat] = 0;\r\n\r\n                const addedStatScaled = Number((value * (5 + itemData.upgradeLv * 4.5) / 100).toFixed(1));\r\n                const addedStatDefault = Number((value * 5 / 100).toFixed(1));\r\n\r\n                const addedStat = Number(Util.random(addedStatDefault, addedStatScaled).toFixed(1));\r\n                console.log(itemData.upgradeLv)\r\n                inventory[itemID].upgradedStat[stat] += addedStat //스탯 추가 능력치 별도 저징\r\n                inventory[itemID].stat[stat] = value + addedStat //퍼센트 추가 적용 (강화 레벨에 비례)\r\n            }\r\n            inventory[itemID].upgradeLv += 1;\r\n            await DB.TABLE.users.update([{id: Clients[SID].userID}], [{inventory}]) \r\n            Clients[SID].send('upgradeResponse', {\r\n                success: true,\r\n                id: itemID,\r\n                data: inventory\r\n            })\r\n        } else { //failed\r\n            Clients[SID].send('upgradeResponse', {\r\n                success: false\r\n            })\r\n        }\r\n    })\r\n    /*\r\n    socket.on('equipItem', async (item: string) => {\r\n        const user = await DB.TABLE.users.findOne({id: Clients[SID].userID});\r\n        const updatedEquip = JSON.parse(user.equip);\r\n        updatedEquip[item] = JSON.parse(user.inventory)[item];\r\n\r\n        await DB.TABLE.users.update([{id: Clients[SID]}], [{equip: updatedEquip}])\r\n\r\n        Clients[SID].send(\"equipOK\")\r\n    })\r\n    socket.on('equipOffItem', async (item: string) => {\r\n        const user = await DB.TABLE.users.findOne({id: Clients[SID].userID});\r\n        const updatedEquip = JSON.parse(user.equip);\r\n        delete updatedEquip[item];\r\n\r\n        await DB.TABLE.users.update([{id: Clients[SID].userID}], [{equip: updatedEquip}])\r\n\r\n        Clients[SID].send(\"equipOffOK\")\r\n    })*/\r\n\r\n}\r\n\r\nServer.listen(GLOBAL.WS_PORT, () => {\r\n    Logger.trace(`Game Server opened : ${GLOBAL.WS_PORT}`)\r\n})\r\n\r\n","module.exports = require(\"socket.io\");","module.exports = require(\"http\");","export default class User {\r\n    public socket: SocketIO.Socket;\r\n    public id: string;\r\n    public userID: string;\r\n    constructor(socket: SocketIO.Socket, id: string, userID: string){\r\n        this.socket = socket;\r\n        this.id = id;\r\n        this.userID = userID;\r\n    }\r\n    send(event: string, ...data: any[]){\r\n        this.socket.emit(event, ...data);\r\n    }\r\n}\r\nmodule.exports = User;","module.exports = require(\"cookie\");","module.exports = require(\"cookie-parser\");"],"sourceRoot":""}